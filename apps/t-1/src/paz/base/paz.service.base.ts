/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Paz } from "@prisma/client";

export class PazServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.PazCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.PazCountArgs>
  ): Promise<number> {
    return this.prisma.paz.count(args);
  }

  async pazs<T extends Prisma.PazFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PazFindManyArgs>
  ): Promise<Paz[]> {
    return this.prisma.paz.findMany(args);
  }
  async paz<T extends Prisma.PazFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PazFindUniqueArgs>
  ): Promise<Paz | null> {
    return this.prisma.paz.findUnique(args);
  }
  async createPaz<T extends Prisma.PazCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PazCreateArgs>
  ): Promise<Paz> {
    return this.prisma.paz.create<T>(args);
  }
  async updatePaz<T extends Prisma.PazUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PazUpdateArgs>
  ): Promise<Paz> {
    return this.prisma.paz.update<T>(args);
  }
  async deletePaz<T extends Prisma.PazDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PazDeleteArgs>
  ): Promise<Paz> {
    return this.prisma.paz.delete(args);
  }
}
